// Code generated by "stringer -type=AddressingMode -output=addressingmode_string.go"; DO NOT EDIT.

package addressingmode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[None-0]
	_ = x[Immediate-1]
	_ = x[RegisterDirect-2]
	_ = x[RegisterIndirect-3]
	_ = x[AbsoluteAddress-4]
	_ = x[ProgramCounterRelative-5]
	_ = x[MemoryIndirect-6]
	_ = x[RegisterIndirectWithDisplacement-7]
	_ = x[RegisterIndirectWithPostIncrement-8]
	_ = x[RegisterIndirectWithPreDecrement-9]
}

const _AddressingMode_name = "NoneImmediateRegisterDirectRegisterIndirectAbsoluteAddressProgramCounterRelativeMemoryIndirectRegisterIndirectWithDisplacementRegisterIndirectWithPostIncrementRegisterIndirectWithPreDecrement"

var _AddressingMode_index = [...]uint8{0, 4, 13, 27, 43, 58, 80, 94, 126, 159, 191}

func (i AddressingMode) String() string {
	if i < 0 || i >= AddressingMode(len(_AddressingMode_index)-1) {
		return "AddressingMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AddressingMode_name[_AddressingMode_index[i]:_AddressingMode_index[i+1]]
}
